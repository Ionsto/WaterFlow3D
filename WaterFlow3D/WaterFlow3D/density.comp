#version 410
const float TableMass[2] = {100,900};
const float TableViscosity = {5,600};
const float TableDensity0 = {200,1000};
const float TableGasConstant = {500,800};
layout( location=0 ) uniform int ParticleCount;       
layout (local_size_x = 128) in;
layout(std430, binding = 0) buffer position_block
{
	vec3 Position[];
};
layout(std430, binding = 1) buffer position_old_block
{
	vec3 PositionOld[];
};
layout(std430,binding = 2) buffer pressure_block
{
	float Pressure[];
};
layout(std430,binding = 3) buffer density_block
{
	float Density[];
};
layout(std430,binding = 4) buffer type_block
{
	int Type[];
};
float Poly6(float r)
{
	return 315.0 * pow((SmoothingParam * SmoothingParam) - (r * r), 3.0) / (64.0 * 3.14 * pow(SmoothingParam, 9.0));
}
void main()
{
	uint i = gl_GlobalInvocationID.x;
	Density[i] = 0;
	for(int j = 0;j < ParticleCount;++j)
	{
		float distance = length(Position[i] - Position[j]);
		if(distance < SmoothingParam){
			Density[i] += Poly6(distance) * Mass[Type[j]]);
		}
	}
	int type = Type[i];
	Pressure[i] = (Density[i] - Density0[type]) * GasConstant[type]);
}
