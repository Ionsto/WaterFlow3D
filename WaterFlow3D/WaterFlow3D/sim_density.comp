#version 430
const float SmoothingParam = 8.0;
const float TableMass[2] = float[](20,40);
const float TableDensity0[] = float[](0.6,0.2);
const float TableGasConstant[] = float[](100000,100000);

layout( location=0 ) uniform int ParticleCount;       
layout (local_size_x = 128) in;
layout(std430, binding = 0) buffer position_block
{
	vec3 Position[];
};
layout(std430, binding = 1) buffer position_old_block
{
	vec3 PositionOld[];
};
layout(std430,binding = 3) buffer density_block
{
	float Density[];
};
layout(std430,binding = 4) buffer pressure_block
{
	float Pressure[];
};
layout(std430,binding = 5) buffer type_block
{
	int Type[];
};
float Poly6(float r)
{
	return 315.0 * pow((SmoothingParam * SmoothingParam) - (r * r), 3) / (64.0 * 3.14 * pow(SmoothingParam, 9));
}
void main()
{
	uint i = gl_GlobalInvocationID.x;
	float density = 0;
	vec3 pos = Position[i];
	for(int j = 0;j < ParticleCount;++j)
	{
		float distance = length(pos - Position[j]);
		if(distance < SmoothingParam)
		{
			density += Poly6(distance) * TableMass[Type[j]];
		}
	}
	Density[i] = density;
	int type = Type[i];
	//if(type == 0 || type == 1){
	Pressure[i] = max(0,(density - TableDensity0[type]) *  TableGasConstant[type]);
	//Pressure[i] = (density - TableDensity0[type]) * TableGasConstant[type];
}
