(ql:quickload :vecto)
(ql:quickload :cl-strings)
(load "vec.lisp")
(defparameter *local-dir* "/mnt/d/Github/Waterflow3D/lisp/out/")
(defclass particle ()
  ((pos :initform (make-vec) :initarg :pos :accessor pos)
   (vel :initform (make-vec) :accessor vel) 
   (acc :initform (make-vec)))
  )
(defun draw-particles (name particles)
  (print name)
  (vecto:with-canvas (:width 100 :height 100)
    (vecto:set-rgb-fill 1 1 1)
    (vecto:clear-canvas)
    (loop for particle in particles
          do (progn 
               (vecto:set-rgb-fill 0 0 0)
               (vecto:centered-circle-path (vec-x (pos particle)) (vec-y (pos particle)) 1))
               (vecto:fill-and-stroke)
          )
    (vecto:save-png (merge-pathnames *local-dir* name))
    )
  )
(defun update (particle &optional (dt 1))
    (setf (pos particle) (vec-add (pos particle) (vel particle)))
  )
(defparameter *particle-list* (list (make-instance 'particle)))
(loop for i from 0 to 100
      do (progn
            (draw-particles 
              (cl-strings:join (list "test" (write-to-string i) ".png")) 
              *particle-list*)
           )
      )
